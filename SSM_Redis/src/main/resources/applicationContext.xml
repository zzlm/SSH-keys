<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<context:component-scan base-package="com"></context:component-scan>

	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<util:properties id="db" location="classpath:dbcp.properties"></util:properties>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="#{db.driver}"></property>
		<property name="url" value="#{db.url}"></property>
		<property name="username" value="#{db.username}"></property>
		<property name="password" value="#{db.password}"></property>
	</bean>

	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:MyBatisConf.xml"></property>
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactory" ref="sessionFactory"></property>
		<property name="basePackage" value="com.dao"></property>
	</bean>

	<!-- 前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">

		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 1.导入redis属性文件 -->
	<context:property-placeholder location="classpath:redis.properties" />
	<!-- 2.配置redis的pool -->
	<bean id="PoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxActive}"></property>
		<property name="maxIdle" value="${redis.maxIdle}"></property>	
	</bean>
	<!-- 3.配置连接池 -->
	<bean id="JedisConnection" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="poolConfig" ref="PoolConfig"></property>
	</bean>
	<!-- 4.配置静态注入类 -->
	<bean id="redisCacheUtils" class="com.redis.RedisCacheUtils">
		<property name="jedisConnectionFactory" ref="JedisConnection"></property>
	</bean>
	
</beans>
